
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK COMA CONTINUE DELAI DELEN DOUBLE_POINT ELSE FLOAT FUNC ID INT KOGDA LESS LFIG LPAREN MINUS MORE NOT NUMI NUMR OBYAVA OR POKA PRINT PRISV RAVNO RFIG RPAREN SEMI_COLON STRING SUM TOGDA UMNOZ VOZVprogram : OBYAVA declare_list LFIG statemant_list RFIG\n            | OBYAVA declare_list func_list LFIG statemant_list RFIGfunc_list : func\n               | func_list SEMI_COLON funcfunc : FUNC ID LPAREN declare_list RPAREN LFIG statemant_list_func RFIG\n            | FUNC ID LPAREN declare_list RPAREN LFIG OBYAVA declare_list statemant_list_func RFIGstatem_func : ID LPAREN arguments RPARENarguments : argument\n            | arguments SEMI_COLON argumentargument : ID\n            | NUMI\n            | NUMR\n            | LPAREN expressoin RPARENdeclare_list : dec\n               | declare_list SEMI_COLON decdec : id_list DOUBLE_POINT typetype : INT\n            | FLOAT\n            | STRINGid_list : ID\n                | id_list COMA IDstatemant_list : statemant\n                | statemant_list SEMI_COLON statemantstatemant : prisvaiv\n            | print\n            | poka\n            | kogdastatemant_list_kogda : statemant_kogda\n                | statemant_list_kogda SEMI_COLON statemant_kogdastatemant_kogda : prisvaiv\n            | print\n            | poka\n            | kogda\n            | CONTINUE\n            | BREAKstatemant_list_func : statemant_func\n                | statemant_list_func SEMI_COLON statemant_funcstatemant_func : prisvaiv\n            | print\n            | poka\n            | kogda\n            | vozvvozv : VOZV expressoinprisvaiv : ID PRISV expressoin\n                | ID PRISV STRINGexpressoin : term\n            | expressoin SUM term\n            | expressoin MINUS termterm : factor\n            | term UMNOZ factor\n            | term DELEN factorfactor : statem_func\n            | ID\n            | NUMI\n            | NUMR\n            | LPAREN expressoin RPARENprint : PRINT LPAREN expressoin RPAREN\n                | PRINT LPAREN STRING RPARENpoka : POKA logic_expressoinression DELAI LFIG statemant_list RFIGkogda : KOGDA logic_expressoinression TOGDA LFIG statemant_list_kogda RFIG ELSE LFIG statemant_list_kogda RFIG\n            | KOGDA logic_expressoinression TOGDA LFIG statemant_list_kogda RFIGlogic_expressoinression : logic_expressoinression OR logic_expressoinression_term\n                | logic_expressoinression_term\n                | NOT logic_expressoinression\n                | logiclogic_expressoinression_term : logic_expressoinression_term AND logic\n                | logiclogic : LPAREN expressoin RAVNO expressoin RPAREN\n            | LPAREN expressoin MORE expressoin RPAREN\n            | LPAREN expressoin LESS expressoin RPAREN'
    
_lr_action_items = {'OBYAVA':([0,106,],[2,117,]),'$end':([1,33,64,],[0,-1,-2,]),'ID':([2,4,7,9,11,13,24,26,28,29,30,31,34,35,36,41,45,55,66,67,68,69,70,74,78,79,80,81,84,106,109,115,117,124,130,131,133,],[6,-14,20,6,27,32,20,-15,-16,-17,-18,-19,20,47,47,47,6,47,83,47,47,47,47,20,47,47,47,20,47,20,83,20,6,47,20,20,20,]),'LFIG':([3,4,8,10,26,28,29,30,31,44,58,63,82,127,129,137,],[7,-14,24,-3,-15,-16,-17,-18,-19,-4,74,81,106,133,-5,-6,]),'SEMI_COLON':([3,4,8,10,14,15,16,17,18,19,26,28,29,30,31,43,44,46,47,48,49,50,51,52,53,54,65,72,73,83,85,86,87,88,89,90,91,92,93,94,98,99,100,101,102,103,104,105,108,110,114,116,118,119,120,121,122,123,125,126,128,129,131,132,134,135,136,137,138,],[9,-14,25,-3,34,-22,-24,-25,-26,-27,-15,-16,-17,-18,-19,34,-4,-23,-53,-44,-45,-46,-49,-52,-54,-55,9,-57,-58,-10,109,-8,-11,-12,-47,-48,-50,-51,-56,34,115,-28,-30,-31,-32,-33,-34,-35,-7,-59,-61,130,-36,-38,-39,-40,-41,-42,-13,-9,-29,-5,9,-43,-37,130,115,-6,-60,]),'FUNC':([3,4,25,26,28,29,30,31,],[11,-14,11,-15,-16,-17,-18,-19,]),'RPAREN':([4,26,28,29,30,31,47,50,51,52,53,54,56,57,65,71,83,85,86,87,88,89,90,91,92,93,95,96,97,107,108,125,126,],[-14,-15,-16,-17,-18,-19,-53,-46,-49,-52,-54,-55,72,73,82,93,-10,108,-8,-11,-12,-47,-48,-50,-51,-56,111,112,113,125,-7,-13,-9,]),'PRINT':([4,7,24,26,28,29,30,31,34,74,81,106,115,130,131,133,],[-14,21,21,-15,-16,-17,-18,-19,21,21,21,21,21,21,21,21,]),'POKA':([4,7,24,26,28,29,30,31,34,74,81,106,115,130,131,133,],[-14,22,22,-15,-16,-17,-18,-19,22,22,22,22,22,22,22,22,]),'KOGDA':([4,7,24,26,28,29,30,31,34,74,81,106,115,130,131,133,],[-14,23,23,-15,-16,-17,-18,-19,23,23,23,23,23,23,23,23,]),'VOZV':([4,26,28,29,30,31,106,130,131,],[-14,-15,-16,-17,-18,-19,124,124,124,]),'DOUBLE_POINT':([5,6,32,],[12,-20,-21,]),'COMA':([5,6,32,],[13,-20,-21,]),'INT':([12,],[29,]),'FLOAT':([12,],[30,]),'STRING':([12,35,36,],[31,49,57,]),'RFIG':([14,15,16,17,18,19,43,46,47,48,49,50,51,52,53,54,72,73,89,90,91,92,93,94,98,99,100,101,102,103,104,105,108,110,114,116,118,119,120,121,122,123,128,132,134,135,136,138,],[33,-22,-24,-25,-26,-27,64,-23,-53,-44,-45,-46,-49,-52,-54,-55,-57,-58,-47,-48,-50,-51,-56,110,114,-28,-30,-31,-32,-33,-34,-35,-7,-59,-61,129,-36,-38,-39,-40,-41,-42,-29,-43,-37,137,138,-60,]),'PRISV':([20,],[35,]),'LPAREN':([21,22,23,27,35,36,39,41,47,55,59,60,66,67,68,69,70,78,79,80,84,109,124,],[36,41,41,45,55,55,41,55,66,55,41,41,84,55,55,55,55,55,55,55,55,84,55,]),'NOT':([22,23,39,],[39,39,39,]),'NUMI':([35,36,41,55,66,67,68,69,70,78,79,80,84,109,124,],[53,53,53,53,87,53,53,53,53,53,53,53,53,87,53,]),'NUMR':([35,36,41,55,66,67,68,69,70,78,79,80,84,109,124,],[54,54,54,54,88,54,54,54,54,54,54,54,54,88,54,]),'DELAI':([37,38,40,61,75,76,77,111,112,113,],[58,-63,-65,-64,-62,-67,-66,-68,-69,-70,]),'OR':([37,38,40,42,61,75,76,77,111,112,113,],[59,-63,-65,59,59,-62,-67,-66,-68,-69,-70,]),'TOGDA':([38,40,42,61,75,76,77,111,112,113,],[-63,-65,63,-64,-62,-67,-66,-68,-69,-70,]),'AND':([38,40,75,76,77,111,112,113,],[60,-67,60,-67,-66,-68,-69,-70,]),'UMNOZ':([47,50,51,52,53,54,89,90,91,92,93,108,],[-53,69,-49,-52,-54,-55,69,69,-50,-51,-56,-7,]),'DELEN':([47,50,51,52,53,54,89,90,91,92,93,108,],[-53,70,-49,-52,-54,-55,70,70,-50,-51,-56,-7,]),'SUM':([47,48,50,51,52,53,54,56,62,71,89,90,91,92,93,95,96,97,107,108,132,],[-53,67,-46,-49,-52,-54,-55,67,67,67,-47,-48,-50,-51,-56,67,67,67,67,-7,67,]),'MINUS':([47,48,50,51,52,53,54,56,62,71,89,90,91,92,93,95,96,97,107,108,132,],[-53,68,-46,-49,-52,-54,-55,68,68,68,-47,-48,-50,-51,-56,68,68,68,68,-7,68,]),'RAVNO':([47,50,51,52,53,54,62,89,90,91,92,93,108,],[-53,-46,-49,-52,-54,-55,78,-47,-48,-50,-51,-56,-7,]),'MORE':([47,50,51,52,53,54,62,89,90,91,92,93,108,],[-53,-46,-49,-52,-54,-55,79,-47,-48,-50,-51,-56,-7,]),'LESS':([47,50,51,52,53,54,62,89,90,91,92,93,108,],[-53,-46,-49,-52,-54,-55,80,-47,-48,-50,-51,-56,-7,]),'CONTINUE':([81,115,133,],[104,104,104,]),'BREAK':([81,115,133,],[105,105,105,]),'ELSE':([114,],[127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declare_list':([2,45,117,],[3,65,131,]),'dec':([2,9,45,117,],[4,26,4,4,]),'id_list':([2,9,45,117,],[5,5,5,5,]),'func_list':([3,],[8,]),'func':([3,25,],[10,44,]),'statemant_list':([7,24,74,],[14,43,94,]),'statemant':([7,24,34,74,],[15,15,46,15,]),'prisvaiv':([7,24,34,74,81,106,115,130,131,133,],[16,16,16,16,100,119,100,119,119,100,]),'print':([7,24,34,74,81,106,115,130,131,133,],[17,17,17,17,101,120,101,120,120,101,]),'poka':([7,24,34,74,81,106,115,130,131,133,],[18,18,18,18,102,121,102,121,121,102,]),'kogda':([7,24,34,74,81,106,115,130,131,133,],[19,19,19,19,103,122,103,122,122,103,]),'type':([12,],[28,]),'logic_expressoinression':([22,23,39,],[37,42,61,]),'logic_expressoinression_term':([22,23,39,59,],[38,38,38,75,]),'logic':([22,23,39,59,60,],[40,40,40,76,77,]),'expressoin':([35,36,41,55,78,79,80,84,124,],[48,56,62,71,95,96,97,107,132,]),'term':([35,36,41,55,67,68,78,79,80,84,124,],[50,50,50,50,89,90,50,50,50,50,50,]),'factor':([35,36,41,55,67,68,69,70,78,79,80,84,124,],[51,51,51,51,51,51,91,92,51,51,51,51,51,]),'statem_func':([35,36,41,55,67,68,69,70,78,79,80,84,124,],[52,52,52,52,52,52,52,52,52,52,52,52,52,]),'arguments':([66,],[85,]),'argument':([66,109,],[86,126,]),'statemant_list_kogda':([81,133,],[98,136,]),'statemant_kogda':([81,115,133,],[99,128,99,]),'statemant_list_func':([106,131,],[116,135,]),'statemant_func':([106,130,131,],[118,134,118,]),'vozv':([106,130,131,],[123,123,123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OBYAVA declare_list LFIG statemant_list RFIG','program',5,'p_program','pars.py',25),
  ('program -> OBYAVA declare_list func_list LFIG statemant_list RFIG','program',6,'p_program','pars.py',26),
  ('func_list -> func','func_list',1,'p_func_list','pars.py',33),
  ('func_list -> func_list SEMI_COLON func','func_list',3,'p_func_list','pars.py',34),
  ('func -> FUNC ID LPAREN declare_list RPAREN LFIG statemant_list_func RFIG','func',8,'p_def','pars.py',41),
  ('func -> FUNC ID LPAREN declare_list RPAREN LFIG OBYAVA declare_list statemant_list_func RFIG','func',10,'p_def','pars.py',42),
  ('statem_func -> ID LPAREN arguments RPAREN','statem_func',4,'p_statem_func','pars.py',49),
  ('arguments -> argument','arguments',1,'p_arguments','pars.py',53),
  ('arguments -> arguments SEMI_COLON argument','arguments',3,'p_arguments','pars.py',54),
  ('argument -> ID','argument',1,'p_argument','pars.py',62),
  ('argument -> NUMI','argument',1,'p_argument','pars.py',63),
  ('argument -> NUMR','argument',1,'p_argument','pars.py',64),
  ('argument -> LPAREN expressoin RPAREN','argument',3,'p_argument','pars.py',65),
  ('declare_list -> dec','declare_list',1,'p_declare_list','pars.py',72),
  ('declare_list -> declare_list SEMI_COLON dec','declare_list',3,'p_declare_list','pars.py',73),
  ('dec -> id_list DOUBLE_POINT type','dec',3,'p_dec','pars.py',80),
  ('type -> INT','type',1,'p_type','pars.py',84),
  ('type -> FLOAT','type',1,'p_type','pars.py',85),
  ('type -> STRING','type',1,'p_type','pars.py',86),
  ('id_list -> ID','id_list',1,'p_id_list','pars.py',90),
  ('id_list -> id_list COMA ID','id_list',3,'p_id_list','pars.py',91),
  ('statemant_list -> statemant','statemant_list',1,'p_statemant_list','pars.py',98),
  ('statemant_list -> statemant_list SEMI_COLON statemant','statemant_list',3,'p_statemant_list','pars.py',99),
  ('statemant -> prisvaiv','statemant',1,'p_statemant','pars.py',106),
  ('statemant -> print','statemant',1,'p_statemant','pars.py',107),
  ('statemant -> poka','statemant',1,'p_statemant','pars.py',108),
  ('statemant -> kogda','statemant',1,'p_statemant','pars.py',109),
  ('statemant_list_kogda -> statemant_kogda','statemant_list_kogda',1,'p_statemant_list_kogda','pars.py',114),
  ('statemant_list_kogda -> statemant_list_kogda SEMI_COLON statemant_kogda','statemant_list_kogda',3,'p_statemant_list_kogda','pars.py',115),
  ('statemant_kogda -> prisvaiv','statemant_kogda',1,'p_statemant_kogda','pars.py',122),
  ('statemant_kogda -> print','statemant_kogda',1,'p_statemant_kogda','pars.py',123),
  ('statemant_kogda -> poka','statemant_kogda',1,'p_statemant_kogda','pars.py',124),
  ('statemant_kogda -> kogda','statemant_kogda',1,'p_statemant_kogda','pars.py',125),
  ('statemant_kogda -> CONTINUE','statemant_kogda',1,'p_statemant_kogda','pars.py',126),
  ('statemant_kogda -> BREAK','statemant_kogda',1,'p_statemant_kogda','pars.py',127),
  ('statemant_list_func -> statemant_func','statemant_list_func',1,'p_statemant_list_func','pars.py',132),
  ('statemant_list_func -> statemant_list_func SEMI_COLON statemant_func','statemant_list_func',3,'p_statemant_list_func','pars.py',133),
  ('statemant_func -> prisvaiv','statemant_func',1,'p_statemant_func','pars.py',140),
  ('statemant_func -> print','statemant_func',1,'p_statemant_func','pars.py',141),
  ('statemant_func -> poka','statemant_func',1,'p_statemant_func','pars.py',142),
  ('statemant_func -> kogda','statemant_func',1,'p_statemant_func','pars.py',143),
  ('statemant_func -> vozv','statemant_func',1,'p_statemant_func','pars.py',144),
  ('vozv -> VOZV expressoin','vozv',2,'p_vozv','pars.py',149),
  ('prisvaiv -> ID PRISV expressoin','prisvaiv',3,'p_prisvaiv','pars.py',153),
  ('prisvaiv -> ID PRISV STRING','prisvaiv',3,'p_prisvaiv','pars.py',154),
  ('expressoin -> term','expressoin',1,'p_expressoin','pars.py',158),
  ('expressoin -> expressoin SUM term','expressoin',3,'p_expressoin','pars.py',159),
  ('expressoin -> expressoin MINUS term','expressoin',3,'p_expressoin','pars.py',160),
  ('term -> factor','term',1,'p_term','pars.py',167),
  ('term -> term UMNOZ factor','term',3,'p_term','pars.py',168),
  ('term -> term DELEN factor','term',3,'p_term','pars.py',169),
  ('factor -> statem_func','factor',1,'p_factor','pars.py',176),
  ('factor -> ID','factor',1,'p_factor','pars.py',177),
  ('factor -> NUMI','factor',1,'p_factor','pars.py',178),
  ('factor -> NUMR','factor',1,'p_factor','pars.py',179),
  ('factor -> LPAREN expressoin RPAREN','factor',3,'p_factor','pars.py',180),
  ('print -> PRINT LPAREN expressoin RPAREN','print',4,'p_print','pars.py',186),
  ('print -> PRINT LPAREN STRING RPAREN','print',4,'p_print','pars.py',187),
  ('poka -> POKA logic_expressoinression DELAI LFIG statemant_list RFIG','poka',6,'p_poka','pars.py',191),
  ('kogda -> KOGDA logic_expressoinression TOGDA LFIG statemant_list_kogda RFIG ELSE LFIG statemant_list_kogda RFIG','kogda',10,'p_kogda','pars.py',195),
  ('kogda -> KOGDA logic_expressoinression TOGDA LFIG statemant_list_kogda RFIG','kogda',6,'p_kogda','pars.py',196),
  ('logic_expressoinression -> logic_expressoinression OR logic_expressoinression_term','logic_expressoinression',3,'p_logic_expressoinression','pars.py',203),
  ('logic_expressoinression -> logic_expressoinression_term','logic_expressoinression',1,'p_logic_expressoinression','pars.py',204),
  ('logic_expressoinression -> NOT logic_expressoinression','logic_expressoinression',2,'p_logic_expressoinression','pars.py',205),
  ('logic_expressoinression -> logic','logic_expressoinression',1,'p_logic_expressoinression','pars.py',206),
  ('logic_expressoinression_term -> logic_expressoinression_term AND logic','logic_expressoinression_term',3,'p_logic_expressoinression_term','pars.py',215),
  ('logic_expressoinression_term -> logic','logic_expressoinression_term',1,'p_logic_expressoinression_term','pars.py',216),
  ('logic -> LPAREN expressoin RAVNO expressoin RPAREN','logic',5,'p_logic','pars.py',225),
  ('logic -> LPAREN expressoin MORE expressoin RPAREN','logic',5,'p_logic','pars.py',226),
  ('logic -> LPAREN expressoin LESS expressoin RPAREN','logic',5,'p_logic','pars.py',227),
]
